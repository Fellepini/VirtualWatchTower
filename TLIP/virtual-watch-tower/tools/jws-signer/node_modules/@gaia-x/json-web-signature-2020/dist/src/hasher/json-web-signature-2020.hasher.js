"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonWebSignature2020Hasher = void 0;
const jsonld_1 = require("jsonld");
const context_handler_1 = require("../jsonld/context.handler");
const proof_model_1 = require("../model/proof.model");
const hasher_1 = require("./hasher");
class JsonWebSignature2020Hasher extends hasher_1.Hasher {
    async hash(document, inputProof) {
        const canonizedData = await (0, jsonld_1.canonize)(document, {
            algorithm: 'URDNA2015',
            format: 'application/n-quads',
            safe: this.safe,
            documentLoader: this.documentLoader
        });
        const proofContext = context_handler_1.ContextHandler.fromContext(document['@context']).add(proof_model_1.JWS2020_CONTEXT).toContext();
        const proof = structuredClone(inputProof);
        proof['@context'] = proofContext;
        delete proof.jws;
        const canonizedProof = await (0, jsonld_1.canonize)(proof, {
            algorithm: 'URDNA2015',
            format: 'application/n-quads',
            safe: this.safe,
            documentLoader: this.documentLoader
        });
        const hashedProof = this.sha256(canonizedProof).digest();
        const hashedData = this.sha256(canonizedData).digest();
        return Buffer.concat([hashedProof, hashedData]);
    }
}
exports.JsonWebSignature2020Hasher = JsonWebSignature2020Hasher;
//# sourceMappingURL=json-web-signature-2020.hasher.js.map