"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Hasher = void 0;
const crypto_1 = require("crypto");
const jsonld_1 = require("jsonld");
/**
 * Hasher classes are used to transform a verifiable credential split into its document and its proof to a normalized
 * hash that can be used to sign and verify itself.
 *
 * A {@link DocumentLoader} can be passed to the constructor in order to override the behaviour of the JSON-LD document
 * loader.
 */
class Hasher {
    constructor(options) {
        var _a, _b;
        this.safe = (_a = options === null || options === void 0 ? void 0 : options.safe) !== null && _a !== void 0 ? _a : true;
        this.documentLoader = (_b = options === null || options === void 0 ? void 0 : options.documentLoader) !== null && _b !== void 0 ? _b : jsonld_1.documentLoaders.node();
    }
    sha256(payload) {
        const h = (0, crypto_1.createHash)('sha256');
        h.update(payload);
        return h;
    }
}
exports.Hasher = Hasher;
//# sourceMappingURL=hasher.js.map